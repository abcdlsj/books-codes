;;define
(define (make-rat n d) (cons n d))
(define (number x) (car x))
(define (denom x) (cdr x))

(define (print-rat x)
  (newline)
  (display (number x))
  (display "/")
  (display (denom x)))

(define (add-rat x y)
  (make-rat (+ (* (number x) (denom y))
               (* (number y) (denom x)))
            (* (denom x) (denom y))))
define (sub-rat x y)
  (make-rat (- (* (number x) (denom y))
               (* (number y) (denom x)))
            (* (denom x) (denom y))))
(define (mul-rat x y)
  (make-rat (* (number x) (number x))
            (* (denom x) (denom y))))
(define (div-rat x y)
  (make-rat (* (number x) (denom y))
            (* (number y) (denom x))))
(define (equal-rat? x y)
  (= (* (number x) (denom y))
     (* (number y) (denom x))))
;; test
(define one-half (make-rat 1 2))
(print-rat one-half)
(define one-third (make-rat 1 3))
(print-rat (add-rat one-third one-half))
(print-rat (mul-rat one-half one-third))
(print-rat (div-rat one-half one-third))
(display (equal-rat? one-half one-third))
